#!/bin/bash
fast="nae"
package_print_format="%-25s%-12s%-40s\n" #printf format

############################
## DUMMY VALUES / NO LOGIC #
############################
repo="FRUE-Games"
ver="0.1-r1"
fpkg_ver="0.1-r1"

#Takes error message as first parameter; used as: command || exit_with_error <MSG>
function exit_with_error() {
	echo "FATAL: $1"
	echo "Aborting."
	exit 1
}

function sleepy() {
	if [ "$fast" = "nae" ]; then
		sleep "$1"
	fi
}

function Help() {
	echo "FRUE Package Kit Getter"
	echo "============================="
	sleepy 0.5
	echo "Version $fpkg_ver"
	echo "============================="
	sleepy 1
	echo " "
	echo "Options:"
	echo "	-i - installs a package"
	echo "	-r - removes a package"
	echo "	-h - displays this help dialog and exits"
	echo "	-f - sets 'fast mode' (waits are skipped)"
	echo "	-v - display version"
	echo "	-d - only download the package and save it in /etc/fpkg"
	sleepy 1
	exit 0
}

function Install() {
	if [ "$remove" = true ]; then
		echo ""
		echo "Already removed sumthing, not gonna install dat"
		exit 0
	else
		echo " :: Searchin' for package ..."
		sleepy 3
		echo " !! Package finded!"
		sleepy 0.5
		echo " These packages gon be INSTALLED: "
		echo "======PKG=================VERSION=====================REPO================="
		printf "$package_print_format" "$package.fpkg" "$ver" "$repo"
		echo "==========================================================================="
		read -rp "Cop packages n' install? [y/n]: " reply
		case "$reply" in
		[nN])
			echo " !! Didn't do jack shit..."
			;;

		[yY])
			echo " :: Downloadin' packages..."
			if [[ -d /tmp/fpkg-cache ]]; then
				cd /tmp/fpkg-cache || exit_with_error "Could not cd to '/tmp/fpkg-cache/'"
			else
				mkdir /tmp/fpkg-cache || exit_with_error "Could not create '/tmp/fpkg-cache/'"
				chmod 777 -R /tmp/fpkg-cache
				cd /tmp/fpkg-cache || exit_with_error "Could not cd to '/tmp/fpkg-cache/'"
			fi
			wget "https://raw.githubusercontent.com/FRUE-Project/${repo}/main/${package}" >/dev/null 2>&1 || exit_with_error "Could not fetch package ${package}"
			if [ "$downloadonly" = true ]; then
				if [[ -d /etc/fpkg ]]; then
					cd /etc/fpkg || exit_with_error "Could not cd to '/etc/fpkg/'"
				else
					mkdir /etc/fpkg || exit_with_error "Could not create '/etc/fpkg/'"
					chmod 777 -R /etc/fpkg
					cd /etc/fpkg || exit_with_error "Could not cd to '/etc/fpkg/'"
				fi
				mv "/tmp/fpkg-cache/${package}" /etc/fpkg || "Could not place executables in /etc/fpkg. Sry."
				chmod +x "/etc/fpkg/${package}"
			else
				echo " :: Unpackin' executables..."
				mv "/tmp/fpkg-cache/${package}" /usr/bin || "Could not unpack executables. Sry."
				sleepy 2
				echo " :: Fixin' executables..."
				chmod +x "/usr/bin/${package}"
			fi
			sleepy 1
			echo " :: Cleanin' up..."
			echo " !! Done!!1 :)"
			sleepy 1
			;;
		esac
	fi
}

function Remove() {
	if [ "$install" = true ]; then
		echo ""
		echo "Already installed sumthing, not gonna remove dat"
		exit 0
	else
		echo " :: Lookin' in /usr/bin ..."
		sleepy 1
		echo " !! Packages finded!"
		sleepy 0.5
		echo "These packages gon be DELETED:"
		echo "======PKG=================VERSION=====================REPO================="
		printf "$package_print_format" "${package}" "$ver" "$repo"
		echo "==========================================================================="
		read -rp "Are you sure you wanna get rid of these packages? [y/n]: " yesno
		case "$yesno" in
		[nN])
			echo " !! Didn't do jack shit..."
			;;
		[yY])
			echo " !! Removing in 3..."
			sleepy 1
			echo " !! Removing in 2..."
			sleepy 1
			echo " !! Removing in 1..."
			sleepy 1
			if [[ -d /usr/bin/"${package}" ]]; then
				rm -r /usr/bin/"${package}" || exit_with_error "Could. Not. Remove. Package."
			elif [[ -f /usr/bin/"${package}" ]]; then
				rm /usr/bin/"${package}" || exit_with_error "Could. Not. Remove. Package."
			else
				echo " !! Error !! How 'bout yue install that package first?"
				exit 1
			fi
			echo "Packages removed!!1 :)"
			sleepy 1
			;;
		esac
	fi
}

function Version() {
	echo "$fpkg_ver"
	echo "Â© 2022, FRUE Project"
	exit 0
}

#function Purge {
#empty for now
#}

#MAIN

#Check for root privileges
if [ "$EUID" -ne 0 ]; then
	exit_with_error "Yue have no permission, duh!!11!1"
fi

[[ -d /etc/fpkg/ ]] || mkdir /etc/fpkg/ || exit_with_error "Could not create '/etc/fpkg/'"

optlist=':hfi:r:vd'

while getopts "$optlist" option; do
	case $option in
	f) fast="ye" ;;
	d)
		echo "test"
		downloadonly=true
		;;
	esac
done

OPTIND=1

while getopts "$optlist" option; do
	case $option in
	h) Help ;;
	i)
		install=true
		package=${OPTARG}
		Install "${package}"
		exit
		;;
	r)
		remove=true
		package=${OPTARG}
		Remove "${package}"
		exit
		;;
	v) Version ;;
	\?) Help ;;
	esac
done

shift $(($OPTIND - 1))
